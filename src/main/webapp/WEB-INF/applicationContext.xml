<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:s="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/security
http://www.springframework.org/schema/security/spring-security-3.2.xsd
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-4.3.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

<!--Spring security-->

    <s:http>
        <s:intercept-url pattern="/adminProd/**" access="ROLE_ADMIN_PROD"/>
        <s:intercept-url pattern="/adminCat/**" access="ROLE_ADMIN_CAT"/>
        <s:form-login login-page="/login" default-target-url="/adminProd/index" authentication-failure-url="/login" />
        <s:logout logout-success-url="/login"/>
    </s:http>

    <s:authentication-manager>
        <s:authentication-provider>
            <s:password-encoder hash="md5"></s:password-encoder>
            <s:jdbc-user-service data-source-ref="datasource"
              users-by-username-query="SELECT user_name,password, actived FROM users WHERE user_name=?"
              authorities-by-username-query="SELECT u.user_name, r.roleName FROM users u, role r WHERE u.user_id=r.user_id AND u.user_name=?"
            />
            <!--<s:user-service>
                 <s:user name="admin2" authorities="ROLE_ADMIN_PROD" />
                 <s:user name="admin1" authorities="ROLE_ADMIN_CAT,ROLE_ADMIN_PROD" password="admin1" />
            </s:user-service>-->
        </s:authentication-provider>
    </s:authentication-manager>

<bean id = "datasource" class = "org.springframework.jdbc.datasource.DriverManagerDataSource">
<property name="driverClassName" value="com.mysql.jdbc.Driver"></property>
<property name="url" value="jdbc:mysql://localhost:8086/elit_eboutique"></property>
<property name="username" value="root"></property>
<property name="password" value="1921"></property>
</bean>

<bean id="persistenceUnitManager"
class="org.springframework.orm.jpa.persistenceunit.DefaultPersistenceUnitManager">
<property name="defaultDataSource" ref="datasource"></property>
<property name="persistenceXmlLocations">
<list>
<value>classpath*:META-INF/persistence.xml</value>
</list>
</property>
</bean>

<bean id="entityManagerFactory"
class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
<property name="persistenceUnitManager" ref="persistenceUnitManager"></property>
<property name="persistenceUnitName" value="UP_BOUTIQUE"></property>
</bean>

<bean id="transactionManager"
class="org.springframework.orm.jpa.JpaTransactionManager">
<property name="entityManagerFactory" ref="entityManagerFactory"></property>
</bean>
<tx:annotation-driven transaction-manager="transactionManager"/>
<context:annotation-config></context:annotation-config>
<bean id="dao" class="dz.elit.eboutique.dao.BoutiqueDAOImpl"></bean>
<bean id="metier" class="dz.elit.eboutique.metier.BoutiqueMetierImpl"> 
<property name="dao" ref="dao"></property> 
</bean>

</beans>
